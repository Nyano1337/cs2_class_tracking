class CBaseAppSystem<class ISchemaSystem> : ISchemaSystem {};
class CBaseVModuleMetadataProvider { void* vtable[1]; };
class CConCommandMemberAccessor<class CSchemaSystem> : ConCommand, ICommandCallback, ICommandCompletionCallback { void* vtable[1]; };
class CConCommandMemberAccessor<class CSchemaSystem> : ICommandCompletionCallback { void* vtable[1]; };
class CExampleSchemaVData_PolymorphicBase { void* vtable[5]; };
class CExampleSchemaVData_PolymorphicDerivedA : CExampleSchemaVData_PolymorphicBase { void* vtable[5]; };
class CExampleSchemaVData_PolymorphicDerivedB : CExampleSchemaVData_PolymorphicBase { void* vtable[5]; };
class CKV3TransferContextBase : IErrorListener { void* vtable[6]; };
class CKV3TransferSaveContext : CKV3TransferContextBase { void* vtable[6]; };
class CModuleMetadataProvider_ResourceManifests : CBaseVModuleMetadataProvider { void* vtable[1]; };
class CPostConnectCallback { void* vtable[1]; };
class CSchemaInstallCallback : CPostConnectCallback { void* vtable[1]; };
class CSchemaRegistration {};
class CSchemaRegistration_resourcefile : CSchemaRegistration { void* vtable[1]; };
class CSchemaRegistration_schemalib : CSchemaRegistration { void* vtable[1]; };
class CSchemaRegistration_schemasystem : CSchemaRegistration { void* vtable[1]; };
class CSchemaSystem : CTier2AppSystem<ISchemaSystem,0> { void* vtable[40]; };
class CSchemaSystemTypeScope : ISchemaSystemTypeScope { void* vtable[35]; };
class CSchemaType { void* vtable[17]; };
class CSchemaType_Atomic : CSchemaType { void* vtable[17]; };
class CSchemaType_Atomic_CollectionOfT : CSchemaType_Atomic_T { void* vtable[17]; };
class CSchemaType_Atomic_I : CSchemaType_Atomic { void* vtable[17]; };
class CSchemaType_Atomic_T : CSchemaType_Atomic { void* vtable[17]; };
class CSchemaType_Atomic_TT : CSchemaType_Atomic_T { void* vtable[17]; };
class CSchemaType_Bitfield : CSchemaType { void* vtable[17]; };
class CSchemaType_Builtin : CSchemaType { void* vtable[17]; };
class CSchemaType_DeclaredClass : CSchemaType { void* vtable[17]; };
class CSchemaType_DeclaredEnum : CSchemaType { void* vtable[17]; };
class CSchemaType_FixedArray : CSchemaType { void* vtable[17]; };
class CSchemaType_Ptr : CSchemaType { void* vtable[17]; };
class CTier0AppSystem<class ISchemaSystem,0> : CBaseAppSystem<ISchemaSystem> {};
class CTier1AppSystem<class ISchemaSystem,0> : CTier0AppSystem<ISchemaSystem,0> {};
class CTier2AppSystem<class ISchemaSystem,0> : CTier1AppSystem<ISchemaSystem,0> {};
class ConCommand : ConCommandRef {};
class ConCommandRef {};
class IAppSystem {};
class ICommandCallback {};
class ICommandCompletionCallback {};
class IErrorListener {};
class ISchemaSystem : IAppSystem {};
class ISchemaSystemTypeScope {};
